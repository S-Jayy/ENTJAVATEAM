@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model MyWebApplication.Models.ViewModel.UserModel
@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <style>
        body {
            background: linear-gradient(to right, #3494E6, #EC6EAD);
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            color: #333;
        }

        h2 {
            color: white;
            text-align: center;
        }

        p {
            margin-bottom: 10px;
            color: #333;
        }

        .form-horizontal {
            background-color: #fff;
            border: 1px solid #000;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 850px;
            margin: 0 auto;
        }

        .control-label {
            color: #333;
        }

        .form-control {
            border: 1px solid #000;
        }

        .btn-default {
            margin: 20px 0;
            display: block;
            margin-left: auto; 
            margin-right: auto;
            background-color: #000;
            color: #fff;
            border: 1px solid #000;
        }

            .btn-default:hover {
                background-color: #267bb1;
                border: 1px solid #000;
            }
    </style>
</head>
<body>
    <h2>Register</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> {
            new SelectListItem { Text="Male", Value="M" },
            new SelectListItem { Text="Female", Value="F" }
            }, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Confirm" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</body>
</html>